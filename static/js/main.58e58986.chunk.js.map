{"version":3,"sources":["config/reducers.js","config/store.js","config/actions.js","ui/ListItems.js","ui/SimpleLineChart.js","ui/SimpleTable.js","ui/FundCard.js","ui/FundList.js","ui/Dashboard.js","Router.js","App.js","index.js"],"names":["defaultState","mm_account","smartfund_contract","portfolios","id","portfolio_name","inception_date","close_date","funding_account","inception_fee","close_fee","status","inception_allocations","name","ticker","price","amount","close_allocations","data_loaded","interval","count","selected_portfolio","active_ui","coin_limit","historical_price_data","coin_data","spot_price","data_start_date","aggregate","spot_pairs","local_currency","priceReducer","state","arguments","length","undefined","action","type","Object","objectSpread","btc_price","data","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","counterTick","dispatch","counterAdd","getState","setSelectedFund","find_id","selectFund","selectUiInterface","selected_ui","selectUI","ui","fetchNewPriceHist","days","agg","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","res","payload","Data","map","item","date","moment","unix","time","format","defineProperty","close","updatePriceHist","newData","newItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","index","value","err","return","abrupt","sent","stop","this","_x","apply","history","fetchCoinData","_ref3","_callee2","_context2","_arr","values","_i","SortOrder","push","updateCoinData","_x2","fetchCoinSpot","_ref4","_callee3","ticker_list","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","portfolio","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","portfolio_asset","_arr2","_i2","ticker_string","_context3","includes","t0","finish","t1","toString","updateCoinSpot","_x3","fetchUsersPriceHist","_ref5","_callee4","current_date","start_date","rows","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_i3","_context4","diff","toFixed","_x4","setDataLoaded","_ref6","_callee5","_context5","_x5","DataLoaded","ListItems","_Component","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","_this","mainListItems","react_default","createElement","Divider_default","List_default","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","onClick","AddBox_default","InsertChart_default","openListItems","ShowChart_default","closedListItems","ListSubheader_default","inset","Component","connect","actionCreators","color_codes","SimpleLineChart","asset_data","Line_default","dataKey","stroke","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","chart_start_date","SimpleTable","b","percent","Math","floor","classes","portfolio_id","coin_name","book_value","market_value","RAW","PRICE","percent_change","percIncrease","console","log","coin_item","CoinName","initial_amount","initial_price","change","createData","Paper_default","className","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","n","component","scope","withStyles","overflowX","minWidth","FundCard","Card_default","card","CardActionArea_default","CardMedia_default","media","image","title","CardContent_default","Typography_default","gutterBottom","variant","CardActions_default","Button_default","size","color","FundList","Dashboard","open","handleDrawerOpen","setState","handleDrawerClose","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","noWrap","AccountBalanceWallet_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","ui_ListItems","content","appBarSpacer","index_es","chartContainer","ui_SimpleLineChart","tableContainer","ui_SimpleTable","React","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","spacing","unit","breakpoints","up","overflow","h5","marginBottom","Router","Switch","Route","exact","path","App","tick","bind","assertThisInitialized","timer","setInterval","clearInterval","src_Router","app","react_redux_es","BrowserRouter","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58e58986.chunk.js","sourcesContent":["import Dashboard from \"../ui/Dashboard\";\r\n\r\nlet defaultState = {\r\n\t// user details\r\n\tmm_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3',\r\n\tsmartfund_contract: '',\r\n\tportfolios: [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tportfolio_name: 'First Portfolio',\r\n\t\t\tinception_date: 1546300800,\r\n\t\t\tclose_date: 1549775747,\r\n\t\t\tfunding_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3ll',\r\n\t\t\tinception_fee: 0.1,\r\n\t\t\tclose_fee: 0.15,\r\n\t\t\tstatus: 'closed',\r\n\t\t\tinception_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 8911.35,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 559.91,\r\n\t\t\t\t\tamount: 0.46,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin Cash',\r\n\t\t\t\t\tticker: 'BCH',\r\n\t\t\t\t\tprice: 1031.78,\r\n\t\t\t\t\tamount: 6.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether Classic',\r\n\t\t\t\t\tticker: 'ETC',\r\n\t\t\t\t\tprice: 19.56,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Litecoin',\r\n\t\t\t\t\tticker: 'LTC',\r\n\t\t\t\t\tprice: 168.71,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tclose_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 218,\r\n\t\t\t\t\tamount: 2.51,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tportfolio_name: 'Second Portfolio',\r\n\t\t\tinception_date: 1546300800,\r\n\t\t\tclose_date: 1549775747,\r\n\t\t\tfunding_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3ll',\r\n\t\t\tinception_fee: 0.1,\r\n\t\t\tclose_fee: 0.15,\r\n\t\t\tstatus: 'open',\r\n\t\t\tinception_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 8911.35,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 559.91,\r\n\t\t\t\t\tamount: 0.46,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin Cash',\r\n\t\t\t\t\tticker: 'BCH',\r\n\t\t\t\t\tprice: 1031.78,\r\n\t\t\t\t\tamount: 6.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether Classic',\r\n\t\t\t\t\tticker: 'ETC',\r\n\t\t\t\t\tprice: 19.56,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tclose_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 218,\r\n\t\t\t\t\tamount: 2.51,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\t\r\n\t// app settings\r\n\tdata_loaded: false,\r\n\t//timer \r\n\tinterval: 2,\r\n\tcount: 0,\r\n\t\r\n\t// UI Settings\r\n\tselected_portfolio: -1, \r\n\tactive_ui: 'dashboard',\r\n\t// price data\r\n\tcoin_limit: 10,\r\n\thistorical_price_data: null,\r\n\tcoin_data: null,\r\n\tspot_price: null,\r\n\tdata_start_date: 1546300800,\r\n\taggregate: 7,\r\n\tspot_pairs: ['USD','EUR','CAD','GBP','JPY'],\r\n\tlocal_currency: 'USD',\r\n\t\r\n}\r\n\r\nconst priceReducer = (state = defaultState, action) => {\r\n\t// console.log()\r\n\tif(action.type === 'UPDATE_BTC_PRICE') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tbtc_price: action.btc_price\r\n\t\t} \r\n\t} else if(action.type === 'UPDATE_COIN_DATA') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tcoin_data: action.coin_data\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_COIN_SPOT') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tspot_price: action.spot_price\r\n\t\t}\r\n\t} else if(action.type === 'SELECT_FUND') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tselected_portfolio: action.selected_portfolio\r\n\t\t}\r\n\t} else if(action.type === 'SELECT_UI') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tactive_ui: action.active_ui\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_DATA_LOADED') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdata_loaded: action.data\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_PRICE_HIST') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\thistorical_price_data: action.historical_price_data\r\n\t\t}\r\n\t} else {\r\n\t\treturn{\r\n\t\t\t...state\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default priceReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\n// import cartReducer from '../features/cart/reducer'\r\nimport priceReducer from './reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const rootReducer = combineReducers({\r\n//     // cart: cartReducer,\r\n//     price: priceReducer\r\n\r\n// })\r\n\r\n// const store = createStore(\r\n//     reducers,\r\n//     applyMiddleware(thunk)\r\n// )\r\nconst store = createStore(\r\n    // rootReducer,\r\n    priceReducer,\r\n    // applyMiddleware(thunk)\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store \r\n\r\n// export default compose(applyMiddleware(thunk))(store)(duedates);\r\n// export default compose(applyMiddleware(thunk))(store)(duedates);\r\n","import axios from 'axios';\r\nimport store from './store'\r\nimport moment from 'moment';\r\n\r\n\r\n// // -----------------------\r\n// export function fetchBTCPrice(){\r\n// \treturn(dispatch) => {\r\n// \t\treturn axios.get('https://api.coinbase.com/v2/prices/BTC-USD/spot').then((res) => {\r\n// \t\t\tdispatch(updateBTCPrice(res.data.data.amount));\r\n// \t\t\t// console.log(\"BTC Price: \", res.data.data.amount)\r\n// \t\t})\r\n// \t}\r\n// }\r\n\r\n// export function updateBTCPrice(amount){\r\n// \treturn{\r\n// \t\ttype:\"UPDATE_BTC_PRICE\",\r\n// \t\tbtc_price:amount\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n// -----------------------\r\nexport function counterTick(){\r\n\treturn(dispatch) => {\r\n\t\tconst newCount = store.getState().count ++\r\n\t\treturn dispatch(counterAdd(newCount))\r\n\t}\r\n}\r\nexport function counterAdd(count){\r\n\treturn{\r\n\t\ttype:\"COUNTER_ADD\",\r\n\t\tcount: count\r\n\t}\r\n}\r\n// =====================================================================\r\nexport function setSelectedFund(find_id){\r\n\treturn(dispatch) => {\r\n\t\treturn dispatch(selectFund(find_id))\r\n\t}\r\n}\r\nexport function selectFund(id){\r\n\treturn{\r\n\t\ttype:\"SELECT_FUND\",\r\n\t\tselected_portfolio: id\r\n\t}\r\n}\r\n// =====================================================================\r\nexport function selectUiInterface(selected_ui){\r\n\treturn(dispatch) => {\r\n\t\treturn dispatch(selectUI(selected_ui))\r\n\t}\r\n}\r\nexport function selectUI(ui){\r\n\treturn{\r\n\t\ttype:\"SELECT_UI\",\r\n\t\tactive_ui: ui\r\n\t}\r\n}\r\n// =====================================================================\r\nexport function fetchNewPriceHist(ticker, days, agg){\r\n\treturn async (dispatch) => {\r\n\t\treturn await axios.get(`https://min-api.cryptocompare.com/data/histoday?fsym=${ticker}&tsym=USD&limit=${days}&aggregate=${agg}&e=CCCAGG&api_key=a5e3152003c8110c8bee2bba417ab3f3b7d8b82fbade524a0b13adcc3e1b1792`).then((res) => {\r\n\t\t\tif (store.getState().historical_price_data === null) {\r\n\t\t\t\tlet payload = res.data.Data.map( (item) => {\r\n\t\t\t\t\tconst date = moment.unix(item.time).format('YYYY-MM-DD')\r\n\t\t\t\t\treturn { date: date, [ticker]: item.close } \r\n\t\t\t\t})\r\n\t\t\t\tdispatch(updatePriceHist( payload ));\r\n\t\t\t} else {\r\n\t\t\t\tlet newData = store.getState().historical_price_data.map( (item) => {\r\n\t\t\t\t\tlet newItem = item\t\t\r\n\t\t\t\t\tfor (var index of res.data.Data) {\r\n\t\t\t\t\t\tconst checkDate = moment.unix(index.time).format('YYYY-MM-DD')\r\n\t\t\t\t\t\tif (checkDate === newItem.date) {\r\n\t\t\t\t\t\t\tnewItem[ticker] = index.close\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn newItem \r\n\t\t\t\t})\r\n\t\t\t\tdispatch(updatePriceHist( newData ));\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\nexport function updatePriceHist(history){\r\n\treturn{\r\n\t\ttype:\"UPDATE_PRICE_HIST\",\r\n\t\thistorical_price_data: history\r\n\t}\r\n}\r\n// ------------------------------------\r\n// =====================================================================\r\nexport function fetchCoinData(){\r\n\treturn async (dispatch) => {\r\n\t\treturn await axios.get(`https://min-api.cryptocompare.com/data/all/coinlist`).then( (res) => {\r\n\t\t\tconst payload = []\t\r\n\t\t\tfor (let item of Object.values(res.data.Data)) {\r\n\t\t\t\tif(item.SortOrder <= store.getState().coin_limit) {\r\n\t\t\t\t\tpayload.push(item)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdispatch(updateCoinData( payload ));\r\n\t\t})\r\n\r\n\t}\r\n}\r\nexport function updateCoinData(payload){\r\n\treturn{\r\n\t\ttype:\"UPDATE_COIN_DATA\",\r\n\t\tcoin_data: payload\r\n\t}\r\n}\r\n// =====================================================================\r\nexport function fetchCoinSpot(){\r\n\treturn async (dispatch) => {\r\n\r\n\t\tlet ticker_list = []\r\n\t\tfor (let portfolio of store.getState().portfolios) {\r\n\t\t\tfor (let portfolio_asset of portfolio.inception_allocations ) {\r\n\t\t\t\tif(\tticker_list.includes(portfolio_asset.ticker) === false\t) {\r\n\t\t\t\t\tticker_list.push(portfolio_asset.ticker)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let item of Object.values(store.getState().coin_data)) {\r\n\t\t\tif(\tticker_list.includes(item.Symbol) === false\t) {\r\n\t\t\t\tticker_list.push(item.Symbol)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ticker list \", ticker_list)\r\n\t\tconst ticker_string = ticker_list.toString()\r\n\t\t// console.log(\"ticker_string\", ticker_string)\r\n\t\treturn await axios.get(`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${ticker_string}&tsyms=${store.getState().spot_pairs.toString()}`).then( (res) => {\r\n\t\t\t// const payload = []\t\r\n\t\t\t// for (let item of Object.values(res.data.Data)) {\r\n\t\t\t// \tconsole.log(\"item \", item)\r\n\t\t\t// \t// \t// if(item.SortOrder <= store.getState().coin_limit) {\r\n\t\t\t// // \t// \tpayload.push(item)\r\n\t\t\t// // \t// }\r\n\t\t\t// }\r\n\t\t\t// const payload = res.data\r\n\t\t\tdispatch(updateCoinSpot( res.data ));\r\n\t\t})\r\n\t}\r\n}\r\nexport function updateCoinSpot(payload){\r\n\treturn{\r\n\t\ttype:\"UPDATE_COIN_SPOT\",\r\n\t\tspot_price: payload\r\n\t}\r\n}\r\n// =====================================================================\r\nexport function fetchUsersPriceHist(){\r\n\treturn async (dispatch) => {\r\n\t\tconst current_date = moment()\r\n\t\tconst start_date = moment.unix(store.getState().data_start_date)\r\n\t\tconst days = current_date.diff(start_date, 'days', false)\r\n\t\tconst aggregate = store.getState().aggregate\r\n\t\tconst rows = (days + 1 / aggregate).toFixed(0)\r\n\t\tlet ticker_list = []\r\n\t\tfor (let portfolio of store.getState().portfolios) {\r\n\t\t\tfor (let portfolio_asset of portfolio.inception_allocations ) {\r\n\t\t\t\tif(\tticker_list.includes(portfolio_asset.ticker) === false\t) {\r\n\t\t\t\t\tticker_list.push(portfolio_asset.ticker)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ticker list \", ticker_list)\r\n\t\t\tfor (let ticker of ticker_list) {\r\n\t\t\tdispatch(fetchNewPriceHist(ticker, rows, aggregate))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// =====================================================================\r\nexport function setDataLoaded(){\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(updateCoinData( true ))\r\n\t}\r\n\t\t\r\n}\r\nexport function DataLoaded(data){\r\n\treturn{\r\n\t\ttype:\"UPDATE_DATA_LOADED\",\r\n\t\tdata: data\r\n\t}\r\n}\r\n// ------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const portfolios = store.getState().portfolios\r\n// const start_date = 1518238874\r\n// const end_date = 1549775747\r\n// const limit = 365\r\n// let price_data = null\r\n\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n\r\n// =====================================================================\r\n// =====================================================================\r\n// =====================================================================\r\n// =====================================================================\r\n// =====================================================================\r\n\r\n\r\n\r\n// export function updateAllHist(history){\r\n// \treturn {\r\n// \t\ttype:\"UPDATE_ALL_HIST\",\r\n// \t\thistorical_price_data: history\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// export function fetchPrice(ticker){\r\n// \tconsole.log(\"FetchPriceHist called!\")\r\n// \treturn(dispatch) => {\r\n// \t\treturn axios.get(`https://api.coinbase.com/v2/prices/${ticker}-USD/spot`).then((res) => {\r\n// \t\t\tdispatch(updatePrice(res.data.data.amount));\r\n// \t\t\t// console.log(\"BTC Price: \", res.data.data.amount)\r\n// \t\t})\r\n// \t}\r\n// }\r\n// export function updatePrice(amount){\r\n// \treturn{\r\n// \t\ttype:\"UPDATE_PRICE\",\r\n// \t\tbtc_price:amount\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddBoxtIcon from '@material-ui/icons/AddBox';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\n// import store from '../config/store'\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n      \r\n\r\n\r\nexport class ListItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n      // this.updateSelectedFund = this.updateSelectedFund.bind(this)\r\n      \r\n    }  \r\n    \r\n    componentDidMount() {\r\n      \r\n    }\r\n    \r\n    \r\n    render() {\r\n      const mainListItems = ( \r\n        <div>\r\n          <Divider />\r\n        <List>\r\n          {/* <Link to={process.env.PUBLIC_URL + '/dashboard'} style={{ textDecoration: 'none' }} > */}\r\n          {/* <Link to={process.env.PUBLIC_URL + '/new'} style={{ textDecoration: 'none' }} > */}\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              {/* <NavLink to='/'><ListItemText primary=\"Dashboard\" /></NavLink> */}\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            <ListItem button onClick={() => { this.props.selectUiInterface('newfund')}}>\r\n            <ListItemIcon>\r\n              <AddBoxtIcon />\r\n            </ListItemIcon>\r\n              <ListItemText primary=\"New SmartFund\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(-1)}} >\r\n              <ListItemIcon>\r\n                <InsertChartIcon />\r\n              </ListItemIcon>\r\n                <ListItemText primary=\"Performance\" />\r\n            </ListItem>\r\n            </List>\r\n          <Divider />\r\n        </div>\r\n      )\r\n\r\n      let openListItems = this.props.portfolios.map((item) => {\r\n        if (item.status === 'open') {\r\n          return (\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(item.id)}} key={item.id} >\r\n              <ListItemIcon>\r\n                <ShowChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={ item.portfolio_name } />\r\n            </ListItem>\r\n        )\r\n      }\r\n    })\r\n\r\n    let closedListItems = this.props.portfolios.map((item) => {     \r\n      if (item.status === 'closed') {\r\n        return (\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(item.id)}} key={item.id} >\r\n              <ListItemIcon>\r\n                <ShowChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={ item.portfolio_name } />\r\n            </ListItem>\r\n        )\r\n      }\r\n    })\r\n    \r\n    return ( \r\n      <div>\r\n        {mainListItems}\r\n        <ListSubheader inset>Open Portfolios</ListSubheader>\r\n        <List>{openListItems}</List>\r\n        <Divider />\r\n        <ListSubheader inset>Liquidated Portfolios</ListSubheader>\r\n        <List>{closedListItems}</List>\r\n      </div>   \r\n    )\r\n  }\r\n}\r\n      \r\nconst mapStateToProps=(state) => {\r\n  const { btc_price, interval, count, portfolios, historical_price_data } = state\r\n  return { btc_price, interval, count, portfolios, historical_price_data }\r\n}\r\n\r\nexport default connect (mapStateToProps, actionCreators)(ListItems)\r\n\r\n","import React, { Component } from 'react'\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../config/actions';\r\nimport Stringify from 'react-stringify'\r\n\r\n// 99% per https://github.com/recharts/recharts/issues/172\r\n\r\n\r\n// function assets() {\r\n  // for (var index of this.props.portfolios[0].inception_allocations) {\r\n  // const asset_date = this.props.portfolios[0].inception_allocations.map((item) => {  \r\n  //   return ( <Line type=\"monotone\" dataKey={ asset_date.ticker } stroke=\"#82ca9d\" /> )\r\n  // }\r\n\r\n  // return ( <Line type=\"monotone\" dataKey=\"BTC\" stroke=\"#82ca9d\" />\r\n\r\n\r\n  // ) \r\n  \r\n\r\n// }\r\n\r\n\r\n// let data = props.portfolios[0].inception_allocations.map((item) => {\r\n//   // console.log(item.inception_allocations)\r\n  \r\n \r\n//   return (createData( item.name, item.ticker, item.amount,'$' +  item.price * item.amount , \"$ -- \", \"-- %\"))\r\n// })\r\n\r\n\r\nconst color_codes = ['#e6194b', '#3cb44b', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']\r\n\r\n\r\nexport class SimpleLineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n    }  \r\n    \r\n\r\n  render(){\r\n    const asset_data = this.props.portfolios[this.props.selected_portfolio].inception_allocations.map((item, index) => {  \r\n      // return ( <Line type=\"monotone\" dataKey={ item.ticker } stroke=\"#82ca9d\" key={ item.id + item.ticker }/> )\r\n      return ( <Line type=\"monotone\" dataKey={ item.ticker } stroke={ color_codes[index] } key={ item.id + item.ticker }/> )\r\n    })\r\n    return (\r\n      <ResponsiveContainer width=\"99%\" height={320}>\r\n        <LineChart data={this.props.historical_price_data}>\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          { asset_data }\r\n          {/* <Line type=\"monotone\" dataKey=\"ETH\" stroke=\"#82ca9d\" /> */}\r\n          {/* <Line type=\"monotone\" dataKey=\"ETC\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, historical_price_data, chart_start_date, selected_portfolio } = state\r\n  return { portfolios, historical_price_data, chart_start_date, selected_portfolio }\r\n}\r\n\r\nexport default connect (mapStateToProps, actionCreators)(SimpleLineChart);\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\nimport Stringify from 'react-stringify'\r\nimport moment from 'moment';\r\nimport { renderByOrder } from 'recharts/lib/util/ReactUtils';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n};\r\n\r\nlet id = 0;\r\nfunction createData(name, ticker, initial_amount, initial_price, book_value, market_value, change) {\r\n  id += 1;\r\n  return { id, name, ticker, initial_amount, initial_price, book_value, market_value, change };\r\n}\r\n\r\nexport class SimpleTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n    }  \r\n    \r\n    componentDidMount() {\r\n    }\r\n\r\n    percIncrease(a, b) {\r\n      let percent;\r\n      if(b !== 0) {\r\n          if(a !== 0) {\r\n              percent = (b - a) / a * 100;\r\n          } else {\r\n              percent = b * 100;\r\n          }\r\n      } else {\r\n          percent = - a * 100;            \r\n      }       \r\n      return Math.floor(percent);\r\n    }\r\n      \r\n  render() {    \r\n    const { classes } = this.props\r\n    const portfolio_id = this.props.selected_portfolio    \r\n    const current_date = moment().format(\"YYYY-MM-DD\").toString()\r\n    let latest_prices = null\r\n    let data = []\r\n\r\n      // console.log(\"portfolio_id: \", portfolio_id)\r\n      // console.log(\"current_date: \", current_date)\r\n      // console.log(\"this.props.historical_price_data: \", this.props.historical_price_data)\r\n    // console.log(\"this.props.local_currency: \", this.props.local_currency)\r\n    // console.log(\"this.props.spot_price: \", this.props.spot_price)\r\n    // console.log(\"this.props.spot_price.RAW: \", this.props.spot_price.RAW)\r\n    // console.log(\"this.props.spot_price.RAW.BTC: \", this.props.spot_price.RAW['BTC'])\r\n    // console.log(\"this.props.spot_price.RAW.BTC.USD: \", this.props.spot_price.RAW['BTC'][this.props.local_currency])\r\n    // console.log(\"this.props.spot_price.RAW.BTC.USD.PRICE: \", this.props.spot_price.RAW['BTC'][this.props.local_currency].PRICE)\r\n\r\n      data = this.props.portfolios[portfolio_id].inception_allocations.map((item) => {\r\n        const book_value = (item.price * item.amount).toFixed(2)\r\n        const market_value = (item.amount * this.props.spot_price.RAW[item.ticker][this.props.local_currency].PRICE).toFixed(2)\r\n        const percent_change = this.percIncrease( book_value, market_value) + \"%\"\r\n        let coin_name \r\n        console.log(\"this.props.coin_data \", this.props.coin_data)\r\n        if ( this.props.coin_data !== null ) { \r\n          coin_name = Object.values(this.props.coin_data).map((coin_item) => {\r\n            if(coin_item.Symbol === item.ticker){\r\n              return coin_item.CoinName\r\n            }\r\n          })\r\n        }\r\n\r\n        return (\r\n          createData( \r\n            coin_name,\r\n            item.ticker, \r\n            item.amount,\r\n            '$' + item.price,\r\n            '$' + book_value,\r\n            '$' + market_value, \r\n            percent_change  \r\n          )\r\n        )\r\n      })\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Crypto Asset</TableCell>\r\n              <TableCell align=\"center\">Ticker</TableCell>\r\n              <TableCell align=\"center\">Initial Amount</TableCell>\r\n              <TableCell align=\"center\">Initial Price ({this.props.local_currency})</TableCell>\r\n              <TableCell align=\"right\">Book Value ({this.props.local_currency})</TableCell>\r\n              <TableCell align=\"right\">Market Value ({this.props.local_currency})</TableCell>\r\n              <TableCell align=\"right\">% Change</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(n => (\r\n              <TableRow key={n.id}> \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {n.name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{n.ticker}</TableCell>\r\n                <TableCell align=\"center\">{n.initial_amount} {n.ticker}</TableCell>\r\n                <TableCell align=\"center\">{n.initial_price} per {n.ticker}</TableCell>\r\n                <TableCell align=\"right\">{n.book_value}</TableCell>\r\n                <TableCell align=\"right\">{n.market_value}</TableCell>\r\n                <TableCell align=\"right\">{n.change}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, historical_price_data, selected_portfolio, spot_price, local_currency, coin_data } = state\r\n  return { portfolios, historical_price_data, selected_portfolio, spot_price, local_currency, coin_data }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(withStyles(styles)(SimpleTable));\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\n\r\n\r\nexport class FundCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }  \r\n    \r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n        \r\n                <Card className={classes.card}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                    className={classes.media}\r\n                    image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n                    title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Lizard\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                        Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                        across all continents except Antarctica\r\n                    </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                    </Button>\r\n                </CardActions>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default FundCard\r\n\r\n\r\n\r\n// function FundCard(props) {\r\n//   return (\r\n//   );\r\n// }\r\n\r\nFundCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps=(state) => {\r\n    const { portfolios, mm_account, selected_portfolio, historical_price_data } = state\r\n    return { portfolios, mm_account, selected_portfolio, historical_price_data }\r\n}\r\n  \r\nexport default connect(mapStateToProps, actionCreators)(FundCard);\r\n  \r\n","import React, { Component } from 'react'\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\nimport FundCard from './FundCard';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport class FundList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n    const { portfolios, mm_account, selected_portfolio, historical_price_data } = state\r\n    return { portfolios, mm_account, selected_portfolio, historical_price_data }\r\n}\r\n  \r\nexport default connect(mapStateToProps, actionCreators)(FundList);\r\n// export default connect(mapStateToProps, actionCreators)(withStyles(styles)(FundList));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport { mainListItems, openListItems, closedListItems } from './ListItems';\r\nimport SimpleLineChart from './SimpleLineChart';\r\nimport SimpleTable from './SimpleTable';\r\nimport moment from 'moment';\r\nimport ListItems from './ListItems';\r\nimport FundCard from './FundCard';\r\nimport FundList from './FundList';\r\nimport Stringify from 'react-stringify'\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    open: true,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n\r\n    \r\n            // console.log(this.props.portfolios[this.props.selected_portfolio].inception_allocations)\r\n// \r\n    const { classes } = this.props;\r\n    // let selected_fund = null\r\n    // let fund_index = null\r\n    // let fund_name = null\r\n\r\n\r\n    // if ( this.props.selected_portfolio !== 0 ) {\r\n    //   fund_index = this.props.selected_portfolio \r\n      \r\n    //   fund_name = this.props.portfolios[this.props.selected_portfolio].portfolio_name\r\n    //   selected_fund = this.props.selected_portfolio[fund_index]\r\n\r\n\r\n    // }\r\n    // console.log(\"portfolio_name: \", fund_name)\r\n    // console.log(\"fund_index: \", fund_index)\r\n    // console.log(\"selected_fund: \", selected_fund)\r\n\r\n    \r\n\r\n\r\n  \r\n\r\n    // console.log(\"this.props.selected_portfolio: \", this.props.selected_portfolio)\r\n    return (\r\n      \r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n            <IconButton color=\"inherit\" aria-label=\"Open drawer\" onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden,\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                {/* <InfoIcon /> */}\r\n                &nbsp;\r\n                <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>SmartFund</Typography>\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" align=\"right\" noWrap className={classes.title}  >\r\n              <AccountBalanceWalletIcon />\r\n              &nbsp;Account: { this.props.mm_account }\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <ListItems />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          {/* { this.props.selected_portfolio === 0 ? ( console.log(\"this.props.selected_portfolio === \", this.props.selected_portfolio) ) : <h1>31231231231231321</h1> } */}\r\n          { this.props.selected_portfolio === -1  \r\n            ? \r\n              <div>\r\n                {/* <br /> <br /> */}\r\n                {/* <h1>Add dashboard intro screen here with info</h1> */}\r\n                <Stringify value={this.props} />\r\n                {/* <FundList /> */}\r\n                {/* <FundCard /> */}\r\n              </div> \r\n            : \r\n              <div>\r\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n                  { this.props.portfolios[this.props.selected_portfolio].portfolio_name }\r\n                  {/* { selected_fund.portfolio_name } */}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"h2\">\r\n                  Created { moment.unix(this.props.portfolios[this.props.selected_portfolio].inception_date).format('lll') }\r\n                  {/* const date = moment.unix(item.time).format('YYYY-MM-DD') */}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"h2\">\r\n                  Price (USD)\r\n                </Typography>\r\n                <Typography component=\"div\" className={classes.chartContainer}>\r\n                  <SimpleLineChart />\r\n                </Typography>\r\n                <Typography variant=\"h5\" gutterBottom component=\"h2\">\r\n                  Asset Allocation\r\n                </Typography>\r\n                <div className={classes.tableContainer}>\r\n                  <SimpleTable />\r\n                </div>\r\n              </div>\r\n            }\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, mm_account, selected_portfolio, historical_price_data } = state\r\n  return { portfolios, mm_account, selected_portfolio, historical_price_data }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(withStyles(styles)(Dashboard));\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Dashboard from './ui/Dashboard'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Router extends React.Component {\r\n    state = {\r\n      open: true,\r\n    \r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <Switch>\r\n            {/* <Route exact path='/dashboard/' component={Dashboard} /> */}\r\n            {/* <Route \r\n                exact \r\n                path={`/dashboard/${this.props.selected_portfolio}`} \r\n                component={Dashboard} \r\n                match={match} \r\n            />\r\n */}\r\n\r\n            {/* <Route \r\n                // exact  \r\n                // path={process.env.PUBLIC_URL + '/dashboard/:id'}\r\n                path={process.env.PUBLIC_URL + '/'}\r\n                render={\r\n                    ({match}) => \r\n                        <Dashboard \r\n                            // match={match} \r\n                            account={this.state.account} \r\n                        />\r\n                } \r\n            /> */}\r\n\r\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={Dashboard} />\r\n            {/* <Route exact path={process.env.PUBLIC_URL + '/'} component={Dashboard} /> */}\r\n        </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n    const { selected_portfolio } = state\r\n    return { selected_portfolio }\r\n  }\r\n\r\nexport default connect (mapStateToProps)(Router)\r\n\r\n","import React, { Component } from 'react';\nimport Router from './Router'\nimport { NavLink } from 'react-router-dom'\nimport * as actionCreators from './config/actions';\nimport { connect } from 'react-redux';\nimport Stringify from 'react-stringify'\nimport SimpleLineChart from './ui/SimpleLineChart'\nimport Dashboard from './ui/Dashboard'\nimport moment from 'moment';\n\n// const Navigation = (props) => <nav>\n//   {/* <ul> */}\n//     {/* <li><NavLink to='/'>Dashboard</NavLink></li> */}\n//     {/* <li><NavLink to='/new'>New Fund</NavLink></li> */}\n//   {/* </ul> */}\n// </nav>\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    // // this.state = {\n    // //     timer: null,\n    // //     count: null\n    // //   }\n    this.tick = this.tick.bind(this)\n  }\n\n  async componentDidMount() {\n    let timer = setInterval(this.tick, 1000 * this.props.interval)\n    // let timer = setInterval(this.tick, 1000 * this.props.interval)\n    this.setState({timer})\n    // await this.props.fetchCoinData().then( await this.pullHistoricalData() )\n    await this.props.fetchCoinData() //.then( await this.pullHistoricalData() )\n    // this.pullHistoricalData()\n    this.props.fetchUsersPriceHist()\n    this.props.fetchCoinSpot()\n  }\n  \n  async pullHistoricalData() {\n    // console.log(\"start_date \", start_date)\n    // console.log(\"current_date \", current_date)\n    // const days = moment.duration(().diff(moment())).asDays()\n    // const days = moment.duration(current_date.diff(start_date)).asDays().toFixed(0)\n    // console.log(\"days \", days)\n    // const diff =  Math.floor(( current_date - start_date ) / 86400000)\n    // console.log(\"diff \", diff)\n    // console.log(\"aggregate \", aggregate)\n    // console.log(\"row_limit \", row_limit)\n    \n    const current_date = moment()\n    const start_date = moment.unix(this.props.data_start_date)\n    const days = current_date.diff(start_date, 'days', false)\n    const aggregate = 7\n    const row_limit = (days + 1 / aggregate).toFixed(0)\n\n    let ticker_list = []\n    // for(let index of this.props.coin_data) {\n    //   if ((index.SortOrder) <= this.props.coin_limits) {\n    //     ticker_list.push(index.Symbol)\n    //   }\n\n    // }\n\n    // let ticker_list = []\n    // console.log(\"this.props.coin_data \", this.props.coin_data)\n    \n    // Object.values(this.props.coin_data).map((item) => {\n    //   return item\n    // })\n\n\n    // for (let coin_item of this.props.coin_data) {\n    //   // console.log(\"coin item: \", coin_item )\n    //   if(coin_item.SortOrder <= 5) {\n    //     ticker_list.push({ rank: coin_item.SortOrder , ticker: coin_item.Symbol })\n      \n    //   }\n    // }\n\n\n    // for (let coin_item of Object.values(this.props.coin_data)) {\n    //   if(coin_item.SortOrder <= 5) {\n    //     ticker_list.push({ rank: coin_item.SortOrder , ticker: coin_item.Symbol })\n      \n    //   }\n    // }\n\n\n\n\n\n\n\n    // ticker_list = await Object.values(this.props.coin_data).map((coin) => {\n    //   if(coin.SortOrder <= 5) {\n    //     console.log(\"coin.SortOrder \", coin.SortOrder)  \n    //     console.log(\"coin.Symbol \", coin.Symbol)  \n    //     // return coin.SortOrder\n    //     return coin.Symbol\n    //   }\n    // })\n\n    console.log(\"ticker_list \", ticker_list)\n    // let data_json = \n\n    // if( this.props.coin_data !== null ) {\n    //   ticker_list = await this.props.coin_data.values.map((item) => {\n    //     if(item.SortOrder <= this.props.coin_limit) {\n    //         return item.Symbol\n    //     }\n    //   })\n    // }\n\n\n    // var lookup = {};\n    // for (var i = 0, len = array.length; i < len; i++) {\n    //     lookup[array[i].id] = array[i];\n    // }\n    \n    // for (var index of this.props.portfolios[0].inception_allocations) {\n    // for (var index of ticker_list) {\n    //   // ticker, days, aggregate \n    //   this.props.fetchNewPriceHist(index, row_limit, 1)\n    // }\n  // }\n  }\n\n  componentWillUnmount() {\n    this.clearInterval(this.state.timer)\n  }\n  \n  tick() {\n    // this.counterTick()\n    // this.props.counterTick()\n  }\n\n  render() {\n    \n    // if (this.props.data_loaded === false && this.props.coin_data !== null) {\n    //   this.pullHistoricalData()\n    // }\n\n    return (\n      <div>\n        {/* <Navigation /> */}\n        <Router />\n        {/* <Stringify value={this.props} /> */}\n      </div>\n\n    );\n  }\n}\n\n\nconst mapStateToProps=(state) => {\n  const { interval, count, portfolios, historical_price_data, selected_portfolio } = state\n  // return { interval, count, portfolios, historical_price_data, selected_portfolio }\n  return state\n}\n\nexport default connect (mapStateToProps, actionCreators)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './config/store'\n\n\nconst app = <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</Provider>\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}
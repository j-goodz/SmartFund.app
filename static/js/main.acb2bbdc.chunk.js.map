{"version":3,"sources":["config/reducers.js","config/store.js","config/actions.js","ui/ListItems.js","ui/SimpleLineChart.js","ui/SimpleTable.js","ui/Dashboard.js","Router.js","App.js","index.js"],"names":["defaultState","mm_account","portfolios","id","portfolio_name","inception_date","close_date","funding_account","inception_fee","close_fee","status","inception_allocations","name","ticker","price","amount","close_allocations","chart_start_date","chart_end_date","interval","count","selected_portfolio","historical_price_data","spot_price","priceReducer","state","arguments","length","undefined","action","type","Object","objectSpread","btc_price","eth_price","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","counterTick","dispatch","counterAdd","getState","setSelectedFund","find_id","selectFund","fetchPrice","console","log","axios","get","concat","then","res","updatePrice","data","fetchNewPriceHist","days","agg","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","payload","Data","map","item","date","moment","unix","time","format","defineProperty","close","updatePriceHist","newData","newItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","index","value","err","return","abrupt","sent","stop","this","_x","apply","history","updateAllHist","fetchAllHist","_fetchAllHist","_callee2","_context2","ListItems","_Component","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","_this","mainListItems","react_default","createElement","Divider_default","List_default","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","AddBox_default","onClick","InsertChart_default","openListItems","ShowChart_default","closedListItems","ListSubheader_default","inset","Component","connect","actionCreators","color_codes","SimpleLineChart","asset_data","Line_default","dataKey","stroke","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","SimpleTable","b","percent","Math","floor","classes","portfolio_id","current_date","toString","latest_prices","book_value","market_value","toFixed","percent_change","percIncrease","initial_amount","change","createData","Paper_default","className","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","n","component","scope","withStyles","overflowX","minWidth","Dashboard","open","handleDrawerOpen","setState","handleDrawerClose","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","color","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","variant","noWrap","title","AccountBalanceWallet_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","ui_ListItems","content","appBarSpacer","index_es","gutterBottom","chartContainer","ui_SimpleLineChart","tableContainer","ui_SimpleTable","React","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","spacing","unit","breakpoints","up","overflow","h5","marginBottom","Router","_this2","Switch","Route","path","process","render","match","ui_Dashboard","account","Navigation","App","tick","bind","assertThisInitialized","timer","setInterval","pullHistoricalData","clearInterval","App_Navigation","src_Router","price_hist","app","react_redux_es","BrowserRouter","src_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.acb2bbdc.chunk.js","sourcesContent":["\r\nlet defaultState = {\r\n\t// user details\r\n\tmm_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3',\r\n\tportfolios: [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tportfolio_name: 'First Portfolio',\r\n\t\t\tinception_date: 1518238874,\r\n\t\t\tclose_date: 1549775747,\r\n\t\t\tfunding_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3ll',\r\n\t\t\tinception_fee: 0.1,\r\n\t\t\tclose_fee: 0.15,\r\n\t\t\tstatus: 'closed',\r\n\t\t\tinception_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 200,\r\n\t\t\t\t\tamount: 0.46,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin Cash',\r\n\t\t\t\t\tticker: 'BCH',\r\n\t\t\t\t\tprice: 153,\r\n\t\t\t\t\tamount: 6.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether Classic',\r\n\t\t\t\t\tticker: 'ETC',\r\n\t\t\t\t\tprice: 33,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Litecoin',\r\n\t\t\t\t\tticker: 'LTC',\r\n\t\t\t\t\tprice: 14,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tclose_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 218,\r\n\t\t\t\t\tamount: 2.51,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tportfolio_name: 'Second Portfolio',\r\n\t\t\tinception_date: 1518238874,\r\n\t\t\tclose_date: 1549775747,\r\n\t\t\tfunding_account: '0xf6e142f84EeBE8b533F97353dE1d3Cd39Cc272f3ll',\r\n\t\t\tinception_fee: 0.1,\r\n\t\t\tclose_fee: 0.15,\r\n\t\t\tstatus: 'open',\r\n\t\t\tchart_start_date: 1518238874,\r\n\t\t\tchart_end_date: 1549775747,\r\n\t\t\tinception_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 200,\r\n\t\t\t\t\tamount: 0.46,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin Cash',\r\n\t\t\t\t\tticker: 'BCH',\r\n\t\t\t\t\tprice: 153,\r\n\t\t\t\t\tamount: 6.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether Classic',\r\n\t\t\t\t\tticker: 'ETC',\r\n\t\t\t\t\tprice: 33,\r\n\t\t\t\t\tamount: 0.16,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tclose_allocations: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bitcoin',\r\n\t\t\t\t\tticker: 'BTC',\r\n\t\t\t\t\tprice: 4282,\r\n\t\t\t\t\tamount: 0.62,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Ether',\r\n\t\t\t\t\tticker: 'ETH',\r\n\t\t\t\t\tprice: 218,\r\n\t\t\t\t\tamount: 2.51,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\t\r\n\t// app settings\r\n\tinterval: 2,\r\n\tcount: 0,\r\n\tselected_portfolio: -1, \r\n\r\n\t// price data\r\n\thistorical_price_data: null,\r\n\tspot_price: null,\r\n}\r\n\r\nconst priceReducer = (state = defaultState, action) => {\r\n\t// console.log()\r\n\tif(action.type === 'UPDATE_BTC_PRICE') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tbtc_price: action.btc_price\r\n\t\t} \r\n\t} else if(action.type === 'UPDATE_ETH_PRICE') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\teth_price: action.eth_price\r\n\t\t}\r\n\t} else if(action.type === 'SELECT_FUND') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tselected_portfolio: action.selected_portfolio\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_PRICE_HIST') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\thistorical_price_data: action.historical_price_data\r\n\t\t}\r\n\t} else {\r\n\t\treturn{\r\n\t\t\t...state\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default priceReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\n// import cartReducer from '../features/cart/reducer'\r\nimport priceReducer from './reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const rootReducer = combineReducers({\r\n//     // cart: cartReducer,\r\n//     price: priceReducer\r\n\r\n// })\r\n\r\n// const store = createStore(\r\n//     reducers,\r\n//     applyMiddleware(thunk)\r\n// )\r\nconst store = createStore(\r\n    // rootReducer,\r\n    priceReducer,\r\n    // applyMiddleware(thunk)\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store \r\n\r\n// export default compose(applyMiddleware(thunk))(store)(duedates);\r\n// export default compose(applyMiddleware(thunk))(store)(duedates);\r\n","import axios from 'axios';\r\nimport store from './store'\r\nimport moment from 'moment';\r\n\r\n\r\n// // -----------------------\r\n// export function fetchBTCPrice(){\r\n// \treturn(dispatch) => {\r\n// \t\treturn axios.get('https://api.coinbase.com/v2/prices/BTC-USD/spot').then((res) => {\r\n// \t\t\tdispatch(updateBTCPrice(res.data.data.amount));\r\n// \t\t\t// console.log(\"BTC Price: \", res.data.data.amount)\r\n// \t\t})\r\n// \t}\r\n// }\r\n\r\n// export function updateBTCPrice(amount){\r\n// \treturn{\r\n// \t\ttype:\"UPDATE_BTC_PRICE\",\r\n// \t\tbtc_price:amount\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n// -----------------------\r\nexport function counterTick(){\r\n\treturn(dispatch) => {\r\n\t\tconst newCount = store.getState().count ++\r\n\t\treturn dispatch(counterAdd(newCount))\r\n\t}\r\n}\r\nexport function counterAdd(count){\r\n\treturn{\r\n\t\ttype:\"COUNTER_ADD\",\r\n\t\tcount: count\r\n\t}\r\n}\r\nexport function setSelectedFund(find_id){\r\n\t// console.log(\"setSelectedFund: \", setSelectedFund)\r\n\treturn(dispatch) => {\r\n\t\t// const newCount = store.getState().count ++\r\n\t\treturn dispatch(selectFund(find_id))\r\n\t}\r\n}\r\nexport function selectFund(id){\r\n\treturn{\r\n\t\ttype:\"SELECT_FUND\",\r\n\t\tselected_portfolio: id\r\n\t}\r\n}\r\n\r\n// -----------------------\r\nexport function fetchPrice(ticker){\r\n\tconsole.log(\"FetchPriceHist called!\")\r\n\treturn(dispatch) => {\r\n\t\treturn axios.get(`https://api.coinbase.com/v2/prices/${ticker}-USD/spot`).then((res) => {\r\n\t\t\tdispatch(updatePrice(res.data.data.amount));\r\n\t\t\t// console.log(\"BTC Price: \", res.data.data.amount)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport function updatePrice(amount){\r\n\treturn{\r\n\t\ttype:\"UPDATE_PRICE\",\r\n\t\tbtc_price:amount\r\n\t}\r\n}\r\n\r\n\r\nexport function fetchNewPriceHist(ticker, days, agg){\r\n\treturn async (dispatch) => {\r\n\t\treturn await axios.get(`https://min-api.cryptocompare.com/data/histoday?fsym=${ticker}&tsym=USD&limit=${days}&aggregate=${agg}&e=CCCAGG`).then((res) => {\r\n\t\t\t// console.log(\"ticker: \", ticker)\r\n\t\t\tif (store.getState().historical_price_data === null) {\r\n\t\t\t\t// console.log(\"NULL!@#\")\r\n\t\t\t\t// console.log(\"res.data.Data\", res.data.Data)\r\n\t\t\t\tlet payload = res.data.Data.map( (item) => {\r\n\t\t\t\t\tconst date = moment.unix(item.time).format('YYYY-MM-DD')\r\n\t\t\t\t\treturn { date: date, [ticker]: item.close } \r\n\t\t\t\t})\r\n\t\t\t\t// console.log(\"payload \", payload)\r\n\t\t\t\tdispatch(updatePriceHist( payload ));\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\"NOT NULL!@#\")\r\n\t\t\t\tlet newData = store.getState().historical_price_data.map( (item) => {\r\n\t\t\t\t\tlet newItem = item\t\t\r\n\t\t\t\t\tfor (var index of res.data.Data) {\r\n\t\t\t\t\t\tconst checkDate = moment.unix(index.time).format('YYYY-MM-DD')\r\n\t\t\t\t\t\tif (checkDate === newItem.date) {\r\n\t\t\t\t\t\t\tnewItem[ticker] = index.close\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn newItem \r\n\t\t\t\t})\r\n\t\t\t\t// console.log(\"newData: \", newData)\r\n\t\t\t\tdispatch(updatePriceHist( newData ));\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\nexport function updatePriceHist(history){\r\n\t// console.log(\"update price hist reducer\")\r\n\t// console.log(\"history\", history)\r\n\treturn{\r\n\t\ttype:\"UPDATE_PRICE_HIST\",\r\n\t\thistorical_price_data: history\r\n\t}\r\n}\r\n\r\n// ------------------------------------\r\n\r\nexport function updateAllHist(history){\r\n\treturn {\r\n\t\ttype:\"UPDATE_ALL_HIST\",\r\n\t\thistorical_price_data: history\r\n\t}\r\n}\r\n\r\n\r\n// export function updateAllHist(history){\r\n// \treturn {\r\n// \t\ttype:\"UPDATE_ALL_HIST\",\r\n// \t\thistorical_price_data: history\r\n// \t}\r\n// }\r\n// dispatch(updatePriceHist( { [ticker]: tempData }));\r\n// dispatch(updatePriceHist(tempData));\r\n\r\n// export async function fetchHist(ticker, days){\r\n// \treturn async (dispatch) => {\r\n// \t\treturn await axios.get(`https://min-api.cryptocompare.com/data/histoday?fsym=${ticker}&tsym=USD&limit=${days}&aggregate=1&e=CCCAGG`).then((res) => {\r\n// \t\tlet tempData = res.data.Data.map( (item) => {\r\n// \t\t\t\tconst date = moment.unix(item.time).format('YYYY-MM-DD')\r\n// \t\t\t\treturn { date: date, unix_date: item.time, close: item.close } \r\n// \t\t\t})\r\n// \t\t\tdispatch (updatePriceHist(tempData));\r\n// \t\t})\r\n// \t}\r\n// }\r\n// ----------------------\r\n\r\nexport async function fetchAllHist(){\r\n\treturn(dispatch) => {\t\r\n\t// const ticker_list = portfolios.inception_allocations.map((item) => {\r\n\t\t// \treturn item.ticker\r\n\t\t// })\r\n\t\t\r\n\t\t// const data = await this.fetchHist('BTC', 10)\r\n\t\t\r\n\t\treturn  (dispatch) => {\r\n\t\t\t// return async (dispatch) => {\r\n\t\t\t\tconst portfolios = store.getState().portfolios\r\n\t\t\t\tconst start_date = 1518238874\r\n\t\t\t\tconst end_date = 1549775747\r\n\t\t\t\tconst limit = 365\r\n\t\t\t\tlet price_data = null\r\n\t\t\t// const ticker = 'BTC'\r\n\t\t\t\r\n\t\t\t// // for (let allocation_item of ticker_list) {\r\n\t\t\t\t\r\n\t\t\t// return \tconsole.log(store.getState().portfolios)\r\n\t\t// \tfor (let allocation_item in portfolios.inception_allocations) {\r\n\t\t// \t\tconst ticker = allocation_item.ticker\r\n\t\t// \t\t// console.log(ticker)\r\n\t\t// \t// const history_payload = await axios.get(`https://min-api.cryptocompare.com/data/histoday?fsym=${ticker}&tsym=USD&limit=${limit}&aggregate=1&e=CCCAGG`).then((res) => {\r\n\t\t// // \t\tlet tempData = res.data.Data.map( (item) => {\r\n\t\t// // \t\t\tconst date = moment.unix(item.time).format('YYYY-MM-DD')\r\n\t\t// // \t\t\treturn { date: date, unix_date: item.time, close: item.close } \r\n\t\t// // \t\t})\r\n\t\t\tdispatch(updateAllHist(portfolios));\r\n\t\t\t}\r\n\t\t\t// dispatch(updateAllHist(portfolios));\r\n\r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n\r\n\t\t// \t})\r\n\t\t\t\r\n\t\t// })\r\n\t\t\r\n\t\t// console.log(\"tempData: \", tempData)\r\n\t\t// return\r\n\t// }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddBoxtIcon from '@material-ui/icons/AddBox';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\n// import store from '../config/store'\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n      \r\n\r\n\r\nexport class ListItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n      // this.updateSelectedFund = this.updateSelectedFund.bind(this)\r\n      \r\n    }  \r\n    \r\n    componentDidMount() {\r\n      \r\n    }\r\n    \r\n    \r\n    render() {\r\n      const mainListItems = ( \r\n        <div>\r\n          <Divider />\r\n        <List>\r\n          {/* <Link to={process.env.PUBLIC_URL + '/dashboard'} style={{ textDecoration: 'none' }} > */}\r\n          {/* <Link to={process.env.PUBLIC_URL + '/new'} style={{ textDecoration: 'none' }} > */}\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              {/* <NavLink to='/'><ListItemText primary=\"Dashboard\" /></NavLink> */}\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            <ListItem button>\r\n            <ListItemIcon>\r\n              <AddBoxtIcon />\r\n            </ListItemIcon>\r\n              <ListItemText primary=\"New SmartFund\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(-1)}} >\r\n              <ListItemIcon>\r\n                <InsertChartIcon />\r\n              </ListItemIcon>\r\n                <ListItemText primary=\"Performance\" />\r\n            </ListItem>\r\n            </List>\r\n          <Divider />\r\n        </div>\r\n      )\r\n\r\n      let openListItems = this.props.portfolios.map((item) => {\r\n        if (item.status === 'open') {\r\n          return (\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(item.id)}} key={item.id} >\r\n              <ListItemIcon>\r\n                <ShowChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={ item.portfolio_name } />\r\n            </ListItem>\r\n        )\r\n      }\r\n    })\r\n\r\n    let closedListItems = this.props.portfolios.map((item) => {     \r\n      if (item.status === 'closed') {\r\n        return (\r\n            <ListItem button onClick={() => { this.props.setSelectedFund(item.id)}} key={item.id} >\r\n              <ListItemIcon>\r\n                <ShowChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={ item.portfolio_name } />\r\n            </ListItem>\r\n        )\r\n      }\r\n    })\r\n    \r\n    return ( \r\n      <div>\r\n        {mainListItems}\r\n        <ListSubheader inset>Open Portfolios</ListSubheader>\r\n        <List>{openListItems}</List>\r\n        <Divider />\r\n        <ListSubheader inset>Liquidated Portfolios</ListSubheader>\r\n        <List>{closedListItems}</List>\r\n      </div>   \r\n    )\r\n  }\r\n}\r\n      \r\nconst mapStateToProps=(state) => {\r\n  const { btc_price, interval, count, portfolios, historical_price_data } = state\r\n  return { btc_price, interval, count, portfolios, historical_price_data }\r\n}\r\n\r\nexport default connect (mapStateToProps, actionCreators)(ListItems)\r\n\r\n","import React, { Component } from 'react'\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../config/actions';\r\nimport Stringify from 'react-stringify'\r\n\r\n// 99% per https://github.com/recharts/recharts/issues/172\r\n\r\n\r\n// function assets() {\r\n  // for (var index of this.props.portfolios[0].inception_allocations) {\r\n  // const asset_date = this.props.portfolios[0].inception_allocations.map((item) => {  \r\n  //   return ( <Line type=\"monotone\" dataKey={ asset_date.ticker } stroke=\"#82ca9d\" /> )\r\n  // }\r\n\r\n  // return ( <Line type=\"monotone\" dataKey=\"BTC\" stroke=\"#82ca9d\" />\r\n\r\n\r\n  // ) \r\n  \r\n\r\n// }\r\n\r\n\r\n// let data = props.portfolios[0].inception_allocations.map((item) => {\r\n//   // console.log(item.inception_allocations)\r\n  \r\n \r\n//   return (createData( item.name, item.ticker, item.amount,'$' +  item.price * item.amount , \"$ -- \", \"-- %\"))\r\n// })\r\n\r\n\r\nconst color_codes = ['#e6194b', '#3cb44b', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']\r\n\r\n\r\nexport class SimpleLineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n    }  \r\n    \r\n\r\n  render(){\r\n    const asset_data = this.props.portfolios[this.props.selected_portfolio].inception_allocations.map((item, index) => {  \r\n      // return ( <Line type=\"monotone\" dataKey={ item.ticker } stroke=\"#82ca9d\" key={ item.id + item.ticker }/> )\r\n      return ( <Line type=\"monotone\" dataKey={ item.ticker } stroke={ color_codes[index] } key={ item.id + item.ticker }/> )\r\n    })\r\n    return (\r\n      <ResponsiveContainer width=\"99%\" height={320}>\r\n        <LineChart data={this.props.historical_price_data}>\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          { asset_data }\r\n          {/* <Line type=\"monotone\" dataKey=\"ETH\" stroke=\"#82ca9d\" /> */}\r\n          {/* <Line type=\"monotone\" dataKey=\"ETC\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, historical_price_data, chart_start_date, selected_portfolio } = state\r\n  return { portfolios, historical_price_data, chart_start_date, selected_portfolio }\r\n}\r\n\r\nexport default connect (mapStateToProps, actionCreators)(SimpleLineChart);\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\nimport Stringify from 'react-stringify'\r\nimport moment from 'moment';\r\nimport { renderByOrder } from 'recharts/lib/util/ReactUtils';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n};\r\n\r\n\r\nlet id = 0;\r\nfunction createData(name, ticker, initial_amount, book_value, market_value, change) {\r\n  id += 1;\r\n  return { id, name, ticker, initial_amount, book_value, market_value, change };\r\n}\r\n\r\n\r\n\r\nexport class SimpleTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n      //   portfolios: null,\r\n      //   // portfolio_id: this.props.portfolios\r\n      // }\r\n    }  \r\n    \r\n    componentDidMount() {\r\n    }\r\n\r\n    percIncrease(a, b) {\r\n      let percent;\r\n      if(b !== 0) {\r\n          if(a !== 0) {\r\n              percent = (b - a) / a * 100;\r\n          } else {\r\n              percent = b * 100;\r\n          }\r\n      } else {\r\n          percent = - a * 100;            \r\n      }       \r\n      return Math.floor(percent);\r\n    }\r\n      \r\n  render() {    \r\n    const { classes } = this.props\r\n    const portfolio_id = this.props.selected_portfolio      \r\n    const current_date = moment().format(\"YYYY-MM-DD\").toString()\r\n    let latest_prices = null\r\n    let data = []\r\n\r\n    if (this.props.historical_price_data !== null) {\r\n      for (let item of this.props.historical_price_data) {\r\n        if ( current_date === item.date ) {\r\n          latest_prices = item\r\n        }\r\n      }\r\n      \r\n      data = this.props.portfolios[portfolio_id].inception_allocations.map((item) => {\r\n        // console.log(\"item.amount * latest_prices[item.ticker]: \", item.amount * latest_prices[item.ticker])\r\n        const book_value = item.price * item.amount\r\n        const market_value = (item.amount * latest_prices[item.ticker]).toFixed(2)\r\n        const percent_change = this.percIncrease( book_value, market_value) + \"%\"\r\n        // const percent_change = (book_value / market_value ).toFixed(2)\r\n        // (item.amount * latest_prices[item.ticker]).toFixed(2) + '%'\r\n\r\n        // if (isNaN(item.price) {\r\n        //   return\r\n        // }\r\n        return (\r\n          createData( \r\n            item.name,\r\n            item.ticker, \r\n            item.amount,\r\n            '$' + book_value,\r\n            '$' + market_value, \r\n            percent_change  \r\n              \r\n          )\r\n        )\r\n      })\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Crypto Asset</TableCell>\r\n              <TableCell align=\"center\">Ticker</TableCell>\r\n              <TableCell align=\"center\">Initial Amount</TableCell>\r\n              <TableCell align=\"right\">Book Value</TableCell>\r\n              <TableCell align=\"right\">Market Value</TableCell>\r\n              <TableCell align=\"right\">% Change</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(n => (\r\n              <TableRow key={n.id}> \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {n.name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{n.ticker}</TableCell>\r\n                <TableCell align=\"center\">{n.initial_amount} {n.ticker}</TableCell>\r\n                <TableCell align=\"right\">{n.book_value}</TableCell>\r\n                <TableCell align=\"right\">{n.market_value}</TableCell>\r\n                <TableCell align=\"right\">{n.change}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, historical_price_data, selected_portfolio } = state\r\n  return { portfolios, historical_price_data, selected_portfolio }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(withStyles(styles)(SimpleTable));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport { mainListItems, openListItems, closedListItems } from './ListItems';\r\nimport SimpleLineChart from './SimpleLineChart';\r\nimport SimpleTable from './SimpleTable';\r\nimport moment from 'moment';\r\nimport ListItems from './ListItems';\r\nimport Stringify from 'react-stringify'\r\nimport * as actionCreators from '../config/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    open: true,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n\r\n    \r\n            // console.log(this.props.portfolios[this.props.selected_portfolio].inception_allocations)\r\n// \r\n    const { classes } = this.props;\r\n    // let selected_fund = null\r\n    // let fund_index = null\r\n    // let fund_name = null\r\n\r\n\r\n    // if ( this.props.selected_portfolio !== 0 ) {\r\n    //   fund_index = this.props.selected_portfolio \r\n      \r\n    //   fund_name = this.props.portfolios[this.props.selected_portfolio].portfolio_name\r\n    //   selected_fund = this.props.selected_portfolio[fund_index]\r\n\r\n\r\n    // }\r\n    // console.log(\"portfolio_name: \", fund_name)\r\n    // console.log(\"fund_index: \", fund_index)\r\n    // console.log(\"selected_fund: \", selected_fund)\r\n\r\n    \r\n\r\n\r\n  \r\n\r\n    // console.log(\"this.props.selected_portfolio: \", this.props.selected_portfolio)\r\n    return (\r\n      \r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n            <IconButton color=\"inherit\" aria-label=\"Open drawer\" onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden,\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                {/* <InfoIcon /> */}\r\n                &nbsp;\r\n                <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>SmartFund</Typography>\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" align=\"right\" noWrap className={classes.title}  >\r\n              <AccountBalanceWalletIcon />\r\n              &nbsp;Account: { this.props.mm_account }\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <ListItems />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          {/* { this.props.selected_portfolio === 0 ? ( console.log(\"this.props.selected_portfolio === \", this.props.selected_portfolio) ) : <h1>31231231231231321</h1> } */}\r\n          { this.props.selected_portfolio === -1  \r\n            ? \r\n              <div>\r\n                {/* <br /> <br /> */}\r\n                {/* <h1>Add dashboard intro screen here with info</h1> */}\r\n                <Stringify value={this.props} />\r\n              </div> \r\n            : \r\n              <div>\r\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n                  { this.props.portfolios[this.props.selected_portfolio].portfolio_name }\r\n                  {/* { selected_fund.portfolio_name } */}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"h2\">\r\n                  Created { moment.unix(this.props.portfolios[this.props.selected_portfolio].inception_date).format('lll') }\r\n                  {/* const date = moment.unix(item.time).format('YYYY-MM-DD') */}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"h2\">\r\n                  Price (USD)\r\n                </Typography>\r\n                <Typography component=\"div\" className={classes.chartContainer}>\r\n                  <SimpleLineChart />\r\n                </Typography>\r\n                <Typography variant=\"h5\" gutterBottom component=\"h2\">\r\n                  Asset Allocation\r\n                </Typography>\r\n                <div className={classes.tableContainer}>\r\n                  <SimpleTable />\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { portfolios, mm_account, selected_portfolio, historical_price_data } = state\r\n  return { portfolios, mm_account, selected_portfolio, historical_price_data }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(withStyles(styles)(Dashboard));\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Dashboard from './ui/Dashboard'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Router extends React.Component {\r\n    state = {\r\n      open: true,\r\n    \r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <Switch>\r\n            {/* <Route exact path='/dashboard/' component={Dashboard} /> */}\r\n            {/* <Route \r\n                exact \r\n                path={`/dashboard/${this.props.selected_portfolio}`} \r\n                component={Dashboard} \r\n                match={match} \r\n            />\r\n */}\r\n\r\n            <Route \r\n                // exact  \r\n                // path={process.env.PUBLIC_URL + '/dashboard/:id'}\r\n                path={process.env.PUBLIC_URL + '/'}\r\n                render={\r\n                    ({match}) => \r\n                        <Dashboard \r\n                            // match={match} \r\n                            account={this.state.account} \r\n                        />\r\n                } \r\n            />\r\n\r\n            {/* <Route exact path='/dashboard/:id' component={Dashboard} /> */}\r\n        </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n    const { selected_portfolio } = state\r\n    return { selected_portfolio }\r\n  }\r\n\r\nexport default connect (mapStateToProps)(Router)\r\n\r\n","import React, { Component } from 'react';\nimport Router from './Router'\nimport { NavLink } from 'react-router-dom'\nimport * as actionCreators from './config/actions';\nimport { connect } from 'react-redux';\nimport Stringify from 'react-stringify'\nimport SimpleLineChart from './ui/SimpleLineChart'\nimport Dashboard from './ui/Dashboard'\nimport moment from 'moment';\n\nconst Navigation = (props) => <nav>\n  {/* <ul> */}\n    {/* <li><NavLink to='/'>Dashboard</NavLink></li> */}\n    {/* <li><NavLink to='/new'>New Fund</NavLink></li> */}\n  {/* </ul> */}\n</nav>\n\nclass App extends Component {\n\n    constructor(props) {\n      super(props);\n      // // this.state = {\n      // //     timer: null,\n      // //     count: null\n      // //   }\n      this.tick = this.tick.bind(this)\n    }\n  \n    componentDidMount() {\n      let timer = setInterval(this.tick, 1000 * this.props.interval)\n      // let timer = setInterval(this.tick, 1000 * this.props.interval)\n      this.setState({timer})\n      // this.refreshPrice()\n      \n      // this.props.fetchPrice(\"BCH\")\n      // this.props.refreshList()\n\n      this.pullHistoricalData()\n      \n    }\n    \n    async pullHistoricalData() {\n      // ticker, days, aggregate\n      // await this.props.fetchNewPriceHist('ETC', 10, 1) \n      // ticker, days, aggregate \n      // await this.props.fetchNewPriceHist('BTC', 3, 1) \n      // await this.props.fetchNewPriceHist('ETH', 3, 1) \n      // await this.props.fetchNewPriceHist('BCH', 3, 1) \n      \n\n      for (var index of this.props.portfolios[0].inception_allocations) {\n        // console.log(this.props.portfolios[this.props.selected_portfolio].inception_allocations)\n        // await this.props.fetchNewPriceHist(index.ticker, 40, 1)\n        this.props.fetchNewPriceHist(index.ticker, 40, 1)\n      }\n      // await this.props.fetchNewPriceHist(\"BTC\", 1000, 30)\n      // await this.props.fetchNewPriceHist(\"BTC\", 1000, 30)\n      // let data = props.portfolios[0].inception_allocations.map((item) => {\n      //   // console.log(item.inception_allocations)\n\n\n      //   return (createData( item.name, item.ticker, item.amount,'$' +  item.price * item.amount , \"$ -- \", \"-- %\"))\n      // })\n\n\n\n\n    }\n\n    componentWillUnmount() {\n      this.clearInterval(this.state.timer)\n    }\n\n    // refreshPrice() {\n    //   // this.props.fetchBTCPrice()\n    //   // console.log(\"state.count: \", this.state.count)\n    //   // const newCount = this.state.count + 1\n    //   // this.setState({ count: newCount })\n    // }\n  \n    tick() {\n      // this.refreshPrice()\n      // this.counterTick()\n\n      // this.props.counterTick()\n      \n      // console.log(\"state: \", this.state)\n      // this.props.newfetchPriceHist()\n      // this.props.versionOne()\n      // this.props.fetchHist('BTC', 10)\n    }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Router />\n        {/* <Stringify value={this.props} /> */}\n      </div>\n\n    );\n  }\n}\n\n\nconst mapStateToProps=(state) => {\n  const { btc_price, interval, count, portfolios, historical_price_data, price_hist, selected_portfolio } = state\n  return { btc_price, interval, count, portfolios, historical_price_data, price_hist, selected_portfolio }\n  // return state\n}\n\nexport default connect (mapStateToProps, actionCreators)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './config/store'\n\n\nconst app = <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</Provider>\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}